// <auto-generated />
using System;
using KollectorScum.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KollectorScum.Api.Migrations
{
    [DbContext(typeof(KollectorScumDbContext))]
    [Migration("20251007105334_AddMusicReleaseEntityWithRelationships")]
    partial class AddMusicReleaseEntityWithRelationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KollectorScum.Api.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("KollectorScum.Api.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("KollectorScum.Api.Models.Format", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Formats");
                });

            modelBuilder.Entity("KollectorScum.Api.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("KollectorScum.Api.Models.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("KollectorScum.Api.Models.MusicRelease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArtistId")
                        .HasColumnType("integer");

                    b.Property<string>("Artists")
                        .HasColumnType("text");

                    b.Property<int?>("CountryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("FormatId")
                        .HasColumnType("integer");

                    b.Property<int?>("GenreId")
                        .HasColumnType("integer");

                    b.Property<string>("Genres")
                        .HasColumnType("text");

                    b.Property<string>("Images")
                        .HasColumnType("text");

                    b.Property<int?>("LabelId")
                        .HasColumnType("integer");

                    b.Property<string>("LabelNumber")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("LengthInSeconds")
                        .HasColumnType("integer");

                    b.Property<string>("Links")
                        .HasColumnType("text");

                    b.Property<bool>("Live")
                        .HasColumnType("boolean");

                    b.Property<string>("Media")
                        .HasColumnType("text");

                    b.Property<DateTime?>("OrigReleaseYear")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("PackagingId")
                        .HasColumnType("integer");

                    b.Property<string>("PurchaseInfo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ReleaseYear")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("StoreId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("CountryId")
                        .HasDatabaseName("IX_MusicReleases_CountryId");

                    b.HasIndex("FormatId")
                        .HasDatabaseName("IX_MusicReleases_FormatId");

                    b.HasIndex("GenreId");

                    b.HasIndex("LabelId")
                        .HasDatabaseName("IX_MusicReleases_LabelId");

                    b.HasIndex("PackagingId")
                        .HasDatabaseName("IX_MusicReleases_PackagingId");

                    b.HasIndex("ReleaseYear")
                        .HasDatabaseName("IX_MusicReleases_ReleaseYear");

                    b.HasIndex("StoreId");

                    b.HasIndex("Title")
                        .HasDatabaseName("IX_MusicReleases_Title");

                    b.ToTable("MusicReleases");
                });

            modelBuilder.Entity("KollectorScum.Api.Models.Packaging", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Packagings");
                });

            modelBuilder.Entity("KollectorScum.Api.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("KollectorScum.Api.Models.MusicRelease", b =>
                {
                    b.HasOne("KollectorScum.Api.Models.Artist", null)
                        .WithMany("MusicReleases")
                        .HasForeignKey("ArtistId");

                    b.HasOne("KollectorScum.Api.Models.Country", "Country")
                        .WithMany("MusicReleases")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("KollectorScum.Api.Models.Format", "Format")
                        .WithMany("MusicReleases")
                        .HasForeignKey("FormatId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("KollectorScum.Api.Models.Genre", null)
                        .WithMany("MusicReleases")
                        .HasForeignKey("GenreId");

                    b.HasOne("KollectorScum.Api.Models.Label", "Label")
                        .WithMany("MusicReleases")
                        .HasForeignKey("LabelId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("KollectorScum.Api.Models.Packaging", "Packaging")
                        .WithMany("MusicReleases")
                        .HasForeignKey("PackagingId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("KollectorScum.Api.Models.Store", null)
                        .WithMany("MusicReleases")
                        .HasForeignKey("StoreId");

                    b.Navigation("Country");

                    b.Navigation("Format");

                    b.Navigation("Label");

                    b.Navigation("Packaging");
                });

            modelBuilder.Entity("KollectorScum.Api.Models.Artist", b =>
                {
                    b.Navigation("MusicReleases");
                });

            modelBuilder.Entity("KollectorScum.Api.Models.Country", b =>
                {
                    b.Navigation("MusicReleases");
                });

            modelBuilder.Entity("KollectorScum.Api.Models.Format", b =>
                {
                    b.Navigation("MusicReleases");
                });

            modelBuilder.Entity("KollectorScum.Api.Models.Genre", b =>
                {
                    b.Navigation("MusicReleases");
                });

            modelBuilder.Entity("KollectorScum.Api.Models.Label", b =>
                {
                    b.Navigation("MusicReleases");
                });

            modelBuilder.Entity("KollectorScum.Api.Models.Packaging", b =>
                {
                    b.Navigation("MusicReleases");
                });

            modelBuilder.Entity("KollectorScum.Api.Models.Store", b =>
                {
                    b.Navigation("MusicReleases");
                });
#pragma warning restore 612, 618
        }
    }
}
