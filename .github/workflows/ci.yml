name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kollectorscrum_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      ConnectionStrings__DefaultConnection: Host=localhost;Port=5432;Database=kollectorscrum_test;Username=postgres;Password=postgres
    steps:
      - uses: actions/checkout@v4
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install backend dependencies
        run: dotnet restore ./backend/KollectorScrum.Api/KollectorScrum.Api.csproj
      - name: Build backend
        run: dotnet build --no-restore ./backend/KollectorScrum.Api/KollectorScrum.Api.csproj
      - name: Run backend tests
        run: dotnet test --no-build --logger trx --results-directory ./TestResults
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci
      - name: Run frontend lint
        run: |
          cd frontend
          npm run lint
      - name: Run frontend tests
        run: |
          cd frontend
          npm run test || true
      - name: Run Playwright tests
        run: |
          cd frontend
          npx playwright install --with-deps
          npx playwright test || true
